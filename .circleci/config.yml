version: 2.1

#TODO: To enable matrix, Consider https://github.com/winksaville/circleci-matrix

# Define defaults
_defaults: &defaults
    working_directory: &working_directory ~/project
    machine:
      image: ubuntu-1604:201903-01

    environment:
      - RELEASE_TESTING: 1
      - PGUSER: postgres
      - PGPASSWORD: test
      - LSMB_TEST_DB: 1
      - LSMB_NEW_DB: lsmbinstalltest
      - LSMB_BASE_URL: http://127.0.0.1:5000
      - PSGI_BASE_URL: http://127.0.0.1:5001
      - HARNESS_RULESFILE: t/testrules.yml

# Define aliases for simplification
aliases:
  - &prove
      command |
            docker-compose -f ledgersmb-dev-docker/docker-compose.yml up -d;
            docker-compose -f ledgersmb-dev-docker/docker-compose.yml exec lsmb prove
                --recurse --pgtap-option dbname=lsmbtestdb
                --pgtap-option username=postgres
                --feature-option tags=~@wip t/ xt/

  - &step_attach_workspace
    attach_workspace:
      at: *working_directory

  # Save and restore cache go along
  # Cache to speed-up next runs
  - &save_main_cache
    paths:
      - .
    key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
    name: Saving LSMB built

  - &restore_main_cache
    key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
    name: Restoring LSMB built

  - &docker_pull_lsmb_dev
      docker-compose -f ledgersmb-dev-docker/docker-compose.yml
                     up --quiet-pull -d

  # Keep for following jobs in this run
  - &persist_to_workspace
      root: ~/
      paths:
        - project

# Reuseable commands
commands:
  docker_pull_cached_lsmb_dev:
    description: "Pull cached LSMB"
    steps:
      #- restore_cache: *restore_main_cache
      - *step_attach_workspace
      - run: *docker_pull_lsmb_dev

# Define jobs
jobs:
  build:
    <<: *defaults
    steps:
    - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
    - checkout
    - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
    - run:
        name: Pull related Git repositories
        command: |
          git submodule sync
          git submodule update --init
          git clone git://github.com/ledgersmb/ledgersmb-dev-docker
    #- restore_cache: *restore_main_cache
    - run: mkdir screens;
    - run: ls -la ~
    - run: cp doc/conf/ledgersmb.conf.default ledgersmb.conf
    - run: chmod -R a=rwX .
    - run: *docker_pull_lsmb_dev
    - run: docker-compose -f ledgersmb-dev-docker/docker-compose.yml exec lsmb make dojo
    #- save_cache: *save_main_cache
    - persist_to_workspace: *persist_to_workspace

#  make_dojo:
#    <<: *defaults
#    steps:
#      - docker_pull_cached_lsmb_dev
#      - run: docker-compose -f ledgersmb-dev-docker/docker-compose.yml exec lsmb make dojo
#      - persist_to_workspace: *persist_to_workspace

#  test_nodojo:
#    <<: *defaults
#    steps:
#      - docker_pull_cached_lsmb_dev
#      - run: *prove

  test_chrome:
    <<: *defaults
    steps:
      - run: ls -la ~
      - docker_pull_cached_lsmb_dev
      - run: docker-compose -f ledgersmb-dev-docker/docker-compose.yml stop selenium
      - run: docker pull browserless/chrome
      - run: docker run -d browserless/chrome 4422:3000
      - run: *prove

  test_firefox:
    <<: *defaults
    steps:
      - docker_pull_cached_lsmb_dev
      - run: docker-compose -f ledgersmb-dev-docker/docker-compose.yml stop selenium
      - run: docker run -d deepsweet/firefox-headless-remote 4422:2828
      - run: *prove

  test_phantomjs:
    <<: *defaults
    steps:
      - docker_pull_cached_lsmb_dev
      - run: *prove

  test_coverage:
    <<: *defaults
    environment:
      - PERL5OPT: -MDevel::Cover
      - DEVEL_COVER_OPTIONS: +ignore,\"\.lttc\$\"
    steps:
      - docker_pull_cached_lsmb_dev
      - run: *prove

# Workflows
# Tests multiple browsers, coverage and dojo
workflows:
  version: 2
  workflow:
    jobs:
      - build

#      - make_dojo:
#          requires:
#            - build

      - test_chrome:
          requires:
            - build

      - test_firefox:
          requires:
            - build

      - test_phantomjs:
          requires:
            - build

      - test_coverage:
          requires:
            - build

#      - test_nodojo:
#          requires:
#            - build