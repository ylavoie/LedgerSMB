# run on GCE build as per suggested:
# https://github.com/travis-ci/travis-ci/issues/3251#issuecomment-219675294
sudo: required
dist: trusty
language: perl
env:
  global:
    # ledgersmb org uses Chris Travers' keys
    - secure: UF72BIXXxkPTIJTV4jl3Sm2eg9JdSK0yNqZLdlF2eDc9M1WldvIOr2qg9zJDcBW7M3qB7wKbyBk6PMcqLcY7mCOVTHQB1ORJa8F4dLTK0JFbGLqARAheCrYjQPhy8cIySbV1yFs5hrP2KeTXd0ZcS0bA+MyK0azMRztu+P3WD80=
    - secure: Htra4bK1HEcUoxtraW+Usv+xXuTlIAuMQDWDc7rrMKLKZMNDuC9buuGbOaXDJx1Rty8h05gMkEcN7LD0fD9FhFzDOW7cnKfYHtysH+Gq1a21TZIKb3lgT4n0344Qg/7FuoV9zUl7WWzW5bg6TYvchdOasJ9CVl4n92dYsr4Y+Ck=
    # einhverfr user uses Chris Travers' keys
    - secure: R6gsxVa7jZv6fvEyVi9+WiSRYwxnObYQdyuWNXKyybDSs+V+viJPuTomD6sZvkgNyP8YvSGiMRaRCchmLfBlMSbgvVGTpC8lHbhp/uXh3+ruA/fGHfDJnhEMqbOv0FDLvrivkfU98UP87lWms3HwYrq+wjfkVRRfFNdrjLTOVVk=
    - secure: a9+NnKLUPrEi1+Xu2nHpUPPDOVMgwXkF2zfY1mhRJCGZ4dMHyLzGx731Zz8nvZrYCjWwEBD5AhzHQEH5eOiir6aWTMA2QaEjY7zzOakYVG36xzigA5X5B+TNi559EpuVPIbT80iHt99ec2WImudUCDnjC+3nAh3KYzhQQ7Wm9r0=
    # ehuelsmann user uses Erik Huelsmann's keys
    - secure: q9IckmvMBEEQ6EeM4U8K4y96Lx6tEaxs/A5GYUJxNJVhUkx3YqJKeERArZc4fpoV3CtUCFPDs/tktiFJn1LDeh3s9vJitUAGMU2AQxiUNARXK4EkEdPhvbX+CtusIIKDXYwEqXLiymv6mmpcc9/19CvHUzr9CiKZbb/LpS8lWqc=
    - secure: cZKPTfU0h4rH2IIRr1Ds1XRPDrloe/K+menYm+VK54hE4MM2zTtNDmWn0fyPdeHeJDRrTF0pyobje8RG9E2Ld5YPHXve1/lVkieoPeqzm9V8hlvZlkgTQJiMAvKzjhSlUJx8AKPjX+jQZfhgAS1hnuWwOIB1cAA7fMpPJ7rPVWo=
    - DISPLAY=:99.0

notifications:
  webhooks: https://ledgersmb.org/webhook/travis_ci_notifications


# POD_TESTING=1 can be set as an environment variable to enable pod tests,
# but these only work with perl versions >= 5.20. Earlier versions of perl
# handle constants in a way which causes Test::Pod::Coverage to consider
# them as naked subroutines.

# Test on PhantomJS, Chrome and Firefox

matrix:
  include:
    - perl: '5.26'
      addons:
        postgresql: '9.6'
        sauce_connect: true
        apt:
          packages:
            - nginx postgresql-9.6-pgtap
            - texlive-latex-recommended
            - texlive-xetex
            - chromium-browser chromium-chromedriver
      env:
        - POD_TESTING=1
        - BROWSER=chrome
    - perl: '5.24'
      addons:
        postgresql: '9.5'
        sauce_connect: true
        apt:
          packages:
            - nginx postgresql-9.5-pgtap
            - texlive-latex-recommended
            - texlive-xetex
            - firefox
      env:
        # - TEST_SAUCE=1
        - DOJO_BUILT=0
        - BROWSER=firefox
        - GECKODRIVER=0.19.1
        - MOZ_HEADLESS=1
    - perl: '5.22'
      addons:
        postgresql: "9.4"
        apt:
          packages:
            - nginx postgresql-9.4-pgtap
            - texlive-latex-recommended
            - texlive-xetex
            - strace phantomjs qt5-default libqt5gui5
      env:
        - COVERAGE=1
        - BROWSER=phantomjs
    - perl: '5.20'
      addons:
        postgresql: "9.4"
        apt:
          packages:
            - nginx postgresql-9.4-pgtap
            - texlive-latex-recommended
            - texlive-xetex
            - firefox
      env:
        - COA_TESTING=1
        - BROWSER=firefox
        - GECKODRIVER=0.19.1
        - MOZ_HEADLESS=1
    - perl: '5.18'
      addons:
        postgresql: "9.3"
        apt:
          packages:
            - nginx postgresql-9.3-pgtap
            - texlive-latex-recommended
            - texlive-xetex
            - chromium-browser chromium-chromedriver
      env:
        - DB_TESTING=1
        - BROWSER=chrome
    - perl: '5.16'
      addons:
        postgresql: "9.2"
        apt:
          packages:
            - nginx postgresql-9.2-pgtap
            - texlive-latex-recommended
            - texlive-xetex
            - firefox
      env:
        - DB_TESTING=1
        - BROWSER=firefox
        - GECKODRIVER=0.19.1
        - MOZ_HEADLESS=1
    - perl: '5.14'
      addons:
        postgresql: "9.2"
        apt:
          packages:
            - nginx postgresql-9.2-pgtap
            - texlive-latex-recommended
            - texlive-xetex
            - phantomjs libqt5gui5
      env:
        - DB_TESTING=1
        - BROWSER=phantomjs

before_cache:
  - mkdir -p $HOME/dojo_archive

cache:
  directories:
    - $HOME/locallib
    - $HOME/travis_phantomjs
    - $HOME/dojo_archive

before_install:
  # list all the running services before we start. Perhaps we can stop some of them to save resources.
  - service --status-all
  # display the available resources
  - utils/diagnostics/t/01-system-resources.t
  - git clone git://github.com/travis-perl/helpers ~/travis-perl-helpers
  - source ~/travis-perl-helpers/init
  - build-perl 2>/dev/null
  - perl -V
  - export PERL_LOCAL_LIB_ROOT="$HOME/locallib${PERL_LOCAL_LIB_ROOT+:}$PERL_LOCAL_LIB_ROOT"
  - export PERL5LIB="$HOME/locallib/lib/perl5${PERL5LIB+:}$PERL5LIB"
  - export PATH="$HOME/locallib/bin:$PATH"
  - export PERL_MM_OPT="INSTALL_BASE=$HOME/locallib"
  - export PERL_MB_OPT="--install_base=$HOME/locallib"
  # Browser specifics
  - |
    case "${BROWSER}" in
      "firefox")
        wget -q https://github.com/mozilla/geckodriver/releases/download/v${GECKODRIVER}/geckodriver-v${GECKODRIVER}-linux64.tar.gz
        sudo sh -c 'tar -x geckodriver -zf geckodriver-v${GECKODRIVER}-linux64.tar.gz -O > /usr/bin/geckodriver'
        sudo chmod +x /usr/bin/geckodriver
        rm geckodriver-v${GECKODRIVER}-linux64.tar.gz
        ;;
    esac

install:
  - cpanm --quiet --notest --installdeps --with-develop --with-feature=edi --with-feature=latex-pdf-images --with-feature=latex-pdf-ps --with-feature=openoffice  --with-feature=starman --with-feature=xls .
  - cpan-install --coverage
  - npm install uglify-js@">=2.0 <3.0"

before_script:
  - make dist DIST_VER=travis DIST_DIR=${HOME}/built-dist/tar-output
  - cd ${HOME}/built-dist
  - tar xzf tar-output/ledgersmb-travis.tar.gz
  - cd ledgersmb
  - cp conf/ledgersmb.conf.default ledgersmb.conf
  - cp t/.proverc ./
  - coverage-setup 2>/dev/null
  - export DEVEL_COVER_OPTIONS=+ignore,"\.lttc\$"
  - sed -e "s#{ROOT}#$PWD#" conf/nginx-travis.conf >/tmp/nginx.conf
  - |
    case "${BROWSER}" in
      "chrome")
        chromium-browser --version
        /usr/lib/chromium-browser/chromedriver --version
        ;;
      "firefox")
        firefox --version
        geckodriver --version
        ;;
      "phantomjs")
        export QT_QPA_PLATFORM=phantom
        phantomjs --version
        ((phantomjs --webdriver=8910 2>/dev/null >/dev/null &) && echo "PhantomJS started succesfully") || (echo "Failed to start PhantomJS!" ; exit 1)
        ;;
    esac
  - PERL5OPT="$PERL5OPT $HARNESS_PERL_SWITCHES" plackup -Ilib --port 5001 --server HTTP::Server::PSGI tools/starman.psgi --access_log /tmp/plackup-access.log 2> /tmp/plackup-error.log &
  - utils/test/Is_LSMB_running.sh --early # fail early if starman is not running (can be skipped based on reponame or owner by setting an array in the script)
  - nginx -c /tmp/nginx.conf
  - if [ "${DOJO_BUILT}" != "" ]; then sed -i -e "s#dojo_built *= *(\d)+#dojo_built={dojo_built}#" ledgersmb.conf ; fi
  # display the available resources
  - utils/diagnostics/t/01-system-resources.t
  # Patch Weasel for headless tests on S::R::D 1.20
  - sudo cp utils/test/*.pm /home/travis/locallib/lib/perl5/Weasel/Driver/

script:
  - RELEASE_TESTING=1
     BROWSER=${BROWSER}
     PGUSER=postgres PGPASSWORD=test
     LSMB_TEST_DB=1 LSMB_NEW_DB=lsmbinstalltest
     LSMB_BASE_URL="http://127.0.0.1:5000"
     PSGI_BASE_URL="http://127.0.0.1:5001"
     HARNESS_RULESFILE="t/testrules.yml"
    prove --jobs $(test-jobs) --recurse
          --pgtap-option dbname=lsmbinstalltest
          --pgtap-option username=postgres
          --feature-option tags=~@wip
          t/ xt/

after_success:
  - >
    if [ "$COVERAGE" == "1" ] ; then
       curl http://localhost:5001/stop.pl ;
       while [ -n "$(jobs -r | grep starman.psgi)" ] ; do sleep 1; echo -n "." ; done ;
       echo "" ;
    fi
  - coverage-report
  # display the available resources
  - utils/diagnostics/t/01-system-resources.t
  # try and force the github camo.githubusercontent.com cache to refresh our badges
  # with no arguments, this only refreshes the badge assests linked to by the default page shown when visiting
  # https://github.com/ledgersmb/LedgerSMB
  # if we want to refresh assets other than those (ie: not master branch) then we will need to add explicit arguments to do so
  # the script is sourced from https://github.com/sbts/github-badge-cache-buster but isn't expected to change so there is no point making it a submodule
  - utils/test/github-badge-cache-buster.sh

after_failure:
  # display the available resources
  - utils/diagnostics/t/01-system-resources.t
  # display the dmesg log. may give some hints about system related failures. eg: has the OOM killer triggered
  - echo ===============================
  - echo === dmesg                   ===
  - echo ===============================
  - dmesg
  - echo ===============================
  - echo === /tmp/plackup-access.log ===
  - echo ===============================
  - cat /tmp/plackup-access.log
  - echo
  - echo ===============================
  - echo === /tmp/plackup-error.log ===
  - echo ===============================
  - cat /tmp/plackup-error.log
  - echo
